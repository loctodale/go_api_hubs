// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ApiStatus string

const (
	ApiStatusActive  ApiStatus = "active"
	ApiStatusDisable ApiStatus = "disable"
	ApiStatusPending ApiStatus = "pending"
)

func (e *ApiStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ApiStatus(s)
	case string:
		*e = ApiStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ApiStatus: %T", src)
	}
	return nil
}

type NullApiStatus struct {
	ApiStatus ApiStatus
	Valid     bool // Valid is true if ApiStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullApiStatus) Scan(value interface{}) error {
	if value == nil {
		ns.ApiStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ApiStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullApiStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ApiStatus), nil
}

type TblApi struct {
	ID          pgtype.UUID
	ProviderID  pgtype.UUID
	Name        string
	Slug        string
	Description pgtype.Text
	Category    pgtype.Text
	BaseUrl     pgtype.Text
	DocUrl      pgtype.Text
	Status      NullApiStatus
	CreatedAt   pgtype.Timestamp
}
