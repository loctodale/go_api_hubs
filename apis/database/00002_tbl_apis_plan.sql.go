// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: 00002_tbl_apis_plan.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgconn"
	"github.com/jackc/pgx/v5/pgtype"
)

const createApisPlan = `-- name: CreateApisPlan :execresult
INSERT INTO tbl_apis_plan (
    api_id, name, price_per_call, monthly_limit, rate_limit, created_at
) VALUES ($1, $2, $3, $4, $5, NOW())
`

type CreateApisPlanParams struct {
	ApiID        pgtype.UUID
	Name         string
	PricePerCall pgtype.Int4
	MonthlyLimit pgtype.Int4
	RateLimit    pgtype.Int4
}

func (q *Queries) CreateApisPlan(ctx context.Context, arg CreateApisPlanParams) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, createApisPlan,
		arg.ApiID,
		arg.Name,
		arg.PricePerCall,
		arg.MonthlyLimit,
		arg.RateLimit,
	)
}

const getApisPlanById = `-- name: GetApisPlanById :one
SELECT id, api_id, name, price_per_call, monthly_limit, rate_limit, created_at
FROM tbl_apis_plan
WHERE id = $1
`

func (q *Queries) GetApisPlanById(ctx context.Context, id pgtype.UUID) (TblApisPlan, error) {
	row := q.db.QueryRow(ctx, getApisPlanById, id)
	var i TblApisPlan
	err := row.Scan(
		&i.ID,
		&i.ApiID,
		&i.Name,
		&i.PricePerCall,
		&i.MonthlyLimit,
		&i.RateLimit,
		&i.CreatedAt,
	)
	return i, err
}
