#networks:
#  kong-network:
#    driver: bridge
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:2.7
    container_name: demo_zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
      image: quay.io/debezium/kafka:2.7
      restart: always
      ports:
        - '9092:9092'
        - '29092:29092'
      links:
        - zookeeper
      environment:
        - ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
        - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
        - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
        - KAFKA_CREATE_TOPICS="otp-auth-topic"
  kafka-ui:
      image: provectuslabs/kafka-ui:latest
      container_name: demo_kafka-ui
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      ports:
        - "9089:8080"
      links:
        - kafka

  account-service:
      build:
        context: .
        dockerfile: ./account/app.dockerfile
      restart: always
      ports:
        - "6000:6001"
      environment:
        APP_ENV: docker
      depends_on:
        - kafka
  sendmail-service:
    build:
      context: .
      dockerfile: ./sendmail/app.dockerfile
    ports:
      - "7000:7001"
    environment:
      APP_ENV: docker
    depends_on:
      - kafka
  apis-service:
    build:
      context: .
      dockerfile: ./apis/app.dockerfile
    restart: always
    ports:
      - "6002:6003"
    environment:
      APP_ENV: docker
    depends_on:
      - kafka
  payment-service:
    build:
      context: .
      dockerfile: ./payment/PaymentService/PaymentService/Dockerfile
    restart: always
    ports:
      - "5200:5201"
    depends_on:
      - kafka
  kong-database:
    image: postgres:9.6
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - kong_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migrations:
    image: kong:latest
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    image: kong:latest
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_PORT: 5432
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl # Cổng Admin API (HTTP & HTTPS)
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl # Cổng Proxy (HTTP & HTTPS)
#      KONG_DECLARATIVE_CONFIG: ./kong/kong.yaml
      KONG_LOG_LEVEL: debug
#      KONG_PLUGINS: "bundled,kong-oidc"
#      KONG_LUA_PACKAGE_PATH: /usr/local/share/lua/5.1/?.lua;;
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./account/proto:/account/proto
      - ./apis/proto:/apis/proto
      - ./payment/PaymentService/Proto:/payment/proto
      - ./google:/google
#      - ./kong-plugin-jwt-keycloak/src:/usr/local/share/lua/5.1/kong/plugins/kong-oidc
#      - ./googleapis/google:/google
      - ./kong:/kong
#    networks:
#      - kong-network
    depends_on:
      - kong-migrations
      - kong-database
      - account-service
    healthcheck: # Kiểm tra sức khỏe của Kong Gateway
      test: [ "CMD-SHELL", "kong health" ]
      interval: 10s
      timeout: 10s
      retries: 5
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga_db"
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database
#    networks:
#      - kong-network
  konga:
    image: pantsel/konga:next
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
  deck:
    image: kong/deck:latest
    volumes:
      - ./kong/kong.yaml:/kong/kong.yaml
    entrypoint: >
      sh -c "
      deck gateway ping --kong-addr http://kong:8001 &&
      deck diff --kong-addr http://kong:8001 --state /kong/kong.yaml &&
      deck sync --kong-addr http://kong:8001 --state /kong/kong.yaml
      "
    depends_on:
      - kong
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command: start-dev

volumes:
  kong_data: